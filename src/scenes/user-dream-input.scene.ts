import {Scenes} from "telegraf";
import DreamAnalyzerBot from "../bot";
import {TextFormatter} from "../services/text-formatter";
import {USER_STATES} from "../constants";

export const userDreamInputSceneFactory = (bot: DreamAnalyzerBot) => {
    return new Scenes.WizardScene<Scenes.WizardContext>(
        'userDreamInputScene',
        async (ctx) => {
            await bot.sceneManager.deleteAll(ctx);
            // const message = ctx.i18n.t("oneMessagePrompt");
            // await bot.sceneManager.replyAndStore(ctx, message);
            await bot.sceneManager.replyAndStore(ctx, 'üí≠ **–†–∞—Å—Å–∫–∞–∂–∏ —Å–≤–æ–π —Å–æ–Ω –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.**\n\n–ü–∏—à–∏ –≤—Å—ë, —á—Ç–æ –≤—Å–ø–æ–º–Ω–∏—à—å: —Å–æ–±—ã—Ç–∏—è, –ª—é–¥–µ–π, –æ–±—Ä–∞–∑—ã, —Ü–≤–µ—Ç–∞, —ç–º–æ—Ü–∏–∏.',  {
                parse_mode: 'Markdown'
            });
            ctx.wizard.next();
        },
        async(ctx) => {
            await bot.sceneManager.deleteAll(ctx);
            bot.sceneManager.handleInput(ctx);
            if((ctx.message as any)?.text) {
                const messageText = TextFormatter.removeEmojis((ctx.message as any)?.text || '');
                if (messageText.length < 10) {
                // const message = ctx.i18n.t("dreamTooShort");
                // await bot.sceneManager.replyAndStore(ctx, message);
                await bot.sceneManager.replyAndStore(ctx, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à —Å–æ–Ω –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤).');
                    return;
                }

                if (messageText.length > 2000) {
                    // const message = ctx.i18n.t("dreamTooLong");
                    // await bot.sceneManager.replyAndStore(ctx, message);
                    await bot.sceneManager.replyAndStore(ctx, '–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –¥–æ 2000 —Å–∏–º–≤–æ–ª–æ–≤.');
                    return;
                }

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å–Ω–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–æ–ø—Ä–æ—Å–∞–º
                await bot.user.updateDialogSession({
                    state: USER_STATES.ASKING_QUESTIONS,
                    dreamText: messageText,
                    currentQuestion: 0,
                    answers: []
                });

                // await bot.sceneManager.replyAndStore(ctx,'‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —Å–Ω–∞ –ø–æ–ª—É—á–µ–Ω–æ!\n\n–¢–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:');
                // // –ó–∞–¥–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
                // await ctx.scene.enter('analyzeDreamScene');
            }
        }
    );
};
